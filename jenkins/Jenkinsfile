pipeline {
	agent any
	environment {
		TF_DIR = "${WORKSPACE}/terraform"
	}
	stages {
        stage('Checkout code') {
            steps {
                git url: 'https://github.com/andonyns/devops-challenge', branch: 'main'
            }
        }

		stage('Analyze Files') {
			steps {
				script {
					docker.image('bridgecrew/checkov:latest').inside("--entrypoint=''") {
						try {
							// Scan the entire repository directory for infrastructure-as-code misconfigurations.
							sh 'checkov -d . --use-enforcement-rules -o cli -o junitxml --output-file-path console,results.xml --repo-id andonyns/devops-challenge --branch main'
							junit skipPublishingChecks: true, testResults: 'results.xml'
						} catch (err) {
							junit skipPublishingChecks: true, testResults: 'results.xml'
							throw err
						}
					}
				}
			}
		}
		stage('Terraform Init') {
			steps {
				dir('terraform') {
					sh 'terraform init'
				}
			}
		}

		stage('Terraform Plan') {
			steps {
				dir('terraform') {
					sh 'terraform plan'
				}
			}
		}
	}
}
