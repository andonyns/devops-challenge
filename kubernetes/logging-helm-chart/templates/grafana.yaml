apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logging-stack.fullname" . }}-grafana
  labels:
    {{- include "logging-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      {{- include "logging-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "logging-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards-provisioning
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
      volumes:
        - name: grafana-pv
          emptyDir: {}
        - name: grafana-datasources
          configMap:
            name: {{ include "logging-stack.fullname" . }}-grafana-datasources
        - name: grafana-dashboards-provisioning
          configMap:
            name: {{ include "logging-stack.fullname" . }}-grafana-dashboards-provisioning
        - name: grafana-dashboards
          configMap:
            name: {{ include "logging-stack.fullname" . }}-grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "logging-stack.fullname" . }}-grafana
  labels:
    {{- include "logging-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
    - port: {{ .Values.grafana.service.port }}
      protocol: TCP
      targetPort: http-grafana
      {{- if eq .Values.grafana.service.type "NodePort" }}
      nodePort: {{ .Values.grafana.service.nodePort }}
      {{- end }}
  selector:
    {{- include "logging-stack.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "logging-stack.fullname" . }}-grafana-datasources
  labels:
    {{- include "logging-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
    - name: Loki
      type: loki
      access: proxy
      orgId: 1
      url: http://{{ include "logging-stack.fullname" . }}-loki:{{ .Values.loki.service.port }}
      basicAuth: false
      isDefault: true
      version: 1
      editable: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "logging-stack.fullname" . }}-grafana-dashboards-provisioning
  labels:
    {{- include "logging-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'dashboards'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "logging-stack.fullname" . }}-grafana-dashboards
  labels:
    {{- include "logging-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  kubernetes-logs.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "links": [],
      "panels": [
        {
          "datasource": "Loki",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "vis": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "values": false,
              "calcs": [
                "lastNotNull"
              ],
              "fields": ""
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "expr": "sum(count_over_time({job=\"default/backend\"}[5m])) by (level)",
              "refId": "A"
            }
          ],
          "title": "Log Levels",
          "type": "piechart"
        },
        {
          "datasource": "Loki",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "vis": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "expr": "sum(rate({job=\"default/backend\"}[1m]))",
              "refId": "A"
            }
          ],
          "title": "Log Rate",
          "type": "timeseries"
        },
        {
          "datasource": "Loki",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 17
          },
          "id": 6,
          "options": {
            "showLabels": false,
            "showTime": false,
            "sortOrder": "Descending",
            "wrapLogMessage": false,
            "prettifyLogMessage": false,
            "enableLogDetails": true,
            "dedupStrategy": "none"
          },
          "targets": [
            {
              "expr": "{job=\"default/backend\"}",
              "refId": "A"
            }
          ],
          "title": "Logs",
          "type": "logs"
        }
      ],
      "schemaVersion": 27,
      "style": "dark",
      "tags": ["kubernetes"],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Kubernetes Logs",
      "uid": "kubernetes-logs",
      "version": 0
    }